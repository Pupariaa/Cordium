const PermissionManager = require('./../src/permissions');
const RoleManager = require('./../src/roles');

describe('RoleManager', () => {
  let permManager, roleManager;

  beforeEach(() => {
    permManager = new PermissionManager();
    roleManager = new RoleManager(permManager);
  });

  test('should define a role with correct permissions', () => {
    roleManager.defineRole('EDITOR', ['READ', 'WRITE']);
    expect(roleManager.roles.EDITOR).toBe(3); // READ (1) | WRITE (2)
  });

  test('should add permission to an existing role', () => {
    roleManager.defineRole('EDITOR', ['READ']);
    roleManager.addPermissionToRole('EDITOR', 'WRITE');
    expect(roleManager.hasPermission('EDITOR', 'WRITE')).toBe(true);
  });

  test('should correctly check if a role has a specific permission', () => {
    roleManager.defineRole('MANAGER', ['READ', 'WRITE', 'DELETE']);
    expect(roleManager.hasPermission('MANAGER', 'DELETE')).toBe(true);
    expect(roleManager.hasPermission('MANAGER', 'READ')).toBe(true);
    expect(roleManager.hasPermission('MANAGER', 'WRITE')).toBe(true);
  });

  test('should throw error for undefined role', () => {
    expect(() => {
      roleManager.hasPermission('SUPERUSER', 'READ');
    }).toThrow();
  });
});
